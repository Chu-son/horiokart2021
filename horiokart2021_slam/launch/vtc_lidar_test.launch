<launch>
    <!-- Arguments -->
    <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
    <arg name="open_rviz" default="false"/>

    <!-- robot -->
    <arg name="urdf_model" default="$(find vtc_robot_description)/urdf/robot_description.urdf" />
    <arg name="gui" default="false" />

    <param name="robot_description" textfile="$(arg urdf_model)" />
    <param name="use_gui" value="$(arg gui)" />

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="robot_state_publisher" pkg=
    "robot_state_publisher" type="robot_state_publisher" />

    <!-- Velodyne Pointcloud -->
    <include file="$(find velodyne_pointcloud)/launch/vtc.launch"></include>

    <!-- Pointcloud to Scan -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
    <remap from="cloud_in" to="/velodyne_points"/>
    <remap from="scan" to="scan"/>
    <rosparam>
        target_frame: lrf_link
        transform_tolerance: 0.01
        min_height: 0.0
        max_height: 1.0

        angle_min: -1.5708
        angle_max: 1.5708
        angle_increment: 0.0087
        scan_time: 0.3333
        range_min: 0.45
        range_max: 40.0
        use_inf: true

        concurrency_level: 1
    </rosparam>
    </node>

    <!-- rviz -->
    <group if="$(arg open_rviz)"> 
        <node pkg="rviz" type="rviz" name="rviz" required="true"
                args="-d $(find turtlebot3_slam)/rviz/turtlebot3_$(arg slam_methods).rviz"/>
    </group>
</launch>